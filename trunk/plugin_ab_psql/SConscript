
# This file is part of c'mon, a lightweight telephony monitor.
#
# Copyright (C) 2012 Peter Schaefer-Hutter ("THE AUTHOR")
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>

# ----------------------------------------------------------------------------
# NOTE: This License does NOT permit incorporating this file (or parts or
#       changed versions of it) into proprietary programs that are
#       distributed to third-parties in binary form only.
# ----------------------------------------------------------------------------

# You can contact the original author by email at peter.schaefer@gmx.de
# if you need different license-terms or other modifications to c'mon.

# $Revision: 10 $ $Date: 2012-09-21 21:35:29 +0200 (Fri, 21 Sep 2012) $

import os

Import('env')
Import('WXLIBS')

env_local = env.Clone()

env_local.Append(CPPDEFINES = [ 'BUILDING_PLUGIN' ] )

env_local.Prepend(CPPPATH=['.'])

env_local.Append(CPPPATH = [ '#third_party/libpq/interfaces/libpq', 
                             '#third_party/libpq/include' ] )

if GetOption('compiler') == "mingw":
  env_local['WINDOWS_INSERT_DEF'] = 1
  env_local['GchSh'] = env_local.Gch('#plugin_ab_psql/stdwx.h')[0]
elif GetOption('compiler') == 'msvc':
  env_local['PCH'] = env_local.PCH('stdwx.cpp')[0]
  env_local['PCHSTOP'] = 'stdwx.h'

res = env_local.RES('version.rc')

lib_sources = Glob('psql_*.cpp')

libTarget = env_local.SharedLibrary(
            target = 'hzabpsql', 
            source = [ lib_sources, res ], 
            LIBS = WXLIBS + [
                     'comctl32', 
                     'uuid', 
                     'rpcrt4',
                     'kernel32',
                     'user32',
                     'gdi32',
                     'winspool',
                     'comdlg32',
                     'advapi32',
                     'shell32',
                     'soci_postgresql',
                     'soci_core',
                     'libpq',
                     'hzshared'
                    ]
            )

env_local.Alias("install", env_local.Install(os.path.join("..", "plugins"), libTarget))
